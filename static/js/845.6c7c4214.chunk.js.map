{"version":3,"file":"static/js/845.6c7c4214.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","redux/contacts.selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/ErrorMessage.jsx","pages/ContactsPage.styled.js","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapForm = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n`;\n\nexport const Title = styled.p`\n  margin-bottom: 20px;\n  text-align: center;\n\n  font-size: 28px;\n  font-weight: bold;\n  color: pink;\n`;\n\nexport const StyledForm = styled.form`\n  padding: 0 20px 30px 20px;\n  min-width: 320px;\n`;\n\nexport const StyledInput = styled.input`\n  padding: 12px;\n  margin-top: 10px;\n  width: 280px;\n  font-size: 16px;\n  border: 1px solid grey;\n  border-radius: 8px;\n  cursor: pointer;\n  &:focus {\n    border: 2px solid pink;\n    outline: 1px solid pink;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  font-size: 16px;\n  font-weight: bold;\n  font-family: Segoe UI;\n  color: #5e5e5e;\n  p {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n`;\n\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectContacts = state => state.contactsStore;\n\nexport const selectItems = createSelector(\n  selectContacts,\n  contactsStore => contactsStore.contacts.items\n);\nexport const selectFilter = createSelector(\n  selectContacts,\n  contactsStore => contactsStore.filter\n);\nexport const selectIsLoading = createSelector(\n  selectContacts,\n  contactsStore => contactsStore.contacts.isLoading\n);\nexport const selectError = createSelector(\n  selectContacts,\n  contactsStore => contactsStore.contacts.error\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"formInput\":\"ContactForm_formInput__GszVU\",\"labelTitle\":\"ContactForm_labelTitle__ImejX\",\"buttonForm\":\"ContactForm_buttonForm__RQPsC\"};","import { Notify } from 'notiflix';\nimport { useSelector } from 'react-redux';\n\nimport { selectItems } from 'redux/contacts.selectors';\nimport  css  from './ContactForm.module.css';\n\nexport const ContactForm = ({ addNewContact }) => {\n\n  const contacts = useSelector(selectItems);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const nameInput = e.currentTarget.elements.name;\n    const numberInput = e.currentTarget.elements.number;\n\n    const contactName = nameInput.value;\n    const contactPhone = numberInput.value;\n    \n    if (!contactName || !contactPhone) {\n      Notify.failure('Please fill in both name and phone fields');\n      return;\n    }\n\n    if (contacts.some(contact => contact.name === contactName)) {\n      Notify.failure(`${contactName} is already in contacts`);\n      return;\n    }\n\n    const newContact = { \n      name: contactName, \n      number: contactPhone \n    };\n\n    addNewContact(newContact);\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        <p className={css.labelTitle}>Name</p>\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Rosie Simpson\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          id=\"nameId\"\n        />\n      </label>\n      <label className={css.label}>\n        <p className={css.labelTitle}>Number</p>\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"459-12-56\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          id=\"numberId\"\n        />\n      </label>\n      <button className={css.buttonForm}>Add contact</button>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapContactList\":\"ContactsList_wrapContactList__X3xuX\",\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"contactsItemName\":\"ContactsList_contactsItemName__GnE7a\",\"contactsItemNumber\":\"ContactsList_contactsItemNumber__Ka0IW\",\"contactsItem\":\"ContactsList_contactsItem__b2nHv\",\"buttonDelete\":\"ContactsList_buttonDelete__oA8JK\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactsSlice';\n\nimport css from './ContactsList.module.css';\n\nexport const ContactsList = ({ contacts }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <div className={css.wrapContactList}>\n    <ul className={css.contactsList}>\n      {contacts.map(contact => {\n        const { id, name, phone } = contact;\n        return (\n          <li className={css.contactsItem} key={id}>\n            <span className={css.contactsItemName}>{name}:</span>\n            <span className={css.contactsItemNumber}>{phone}</span>\n            <button\n              className={css.buttonDelete}\n              type=\"button\"\n              onClick={() => handleDelete(id)}\n            >Delete</button>\n          </li>\n        );\n      })}\n    </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapFilter\":\"Filter_wrapFilter__EvTOU\",\"titleFilter\":\"Filter_titleFilter__eRASS\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import css from './Filter.module.css';\n\nexport const Filter = ({ value, handleFilterContacts }) => {\n  const handleChange = e => handleFilterContacts(e.target.value);\n  \n  return (\n    <div className={css.wrapFilter}>\n      <p className={css.titleFilter}>Find contacts by name</p>\n      <input\n        className={css.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"Find contact by name\"\n      />\n    </div>\n  );\n};","import React from 'react';\n\nconst ErrorMessage = ({ message }) => {\n  return <p className=\"error\">{message}</p>;\n};\n\nexport default ErrorMessage;","import styled from 'styled-components';\n\nexport const ContactsMessage = styled.p`\ntext-align: center;\nfont-weight: 400;\nfont-size: 16px;\n`;","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addContact,\n  deleteContact,\n  fetchContacts,\n  filterContacts,\n} from 'redux/contactsSlice';\nimport { useEffect } from 'react';\nimport {\n  selectError,\n  selectFilter,\n  selectIsLoading,\n  selectItems,\n} from 'redux/contacts.selectors';\nimport Loader from 'components/Loader';\nimport ErrorMessage from 'components/ErrorMessage';\nimport { Title } from 'components/RegisterForm/RegisterForm.styled';\nimport { Notify } from 'notiflix';\nimport { ContactsMessage } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectItems);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const addNewContact = newContact => {\n    contacts.some(({ name }) => name === newContact.name)\n      ? Notify.failure(`${newContact.name} is already in contacts`)\n      : dispatch(addContact(newContact));\n  };\n\n  const handleFilterContacts = filteredValue => {\n    dispatch(filterContacts(filteredValue));\n  };\n\n  const getFilterContacts = () => {\n    const filterlowerCase = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterlowerCase)\n    );\n  };\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <ContactForm addNewContact={addNewContact}></ContactForm>\n      <Title>Contacts</Title>\n      {contacts.length === 0 ? (\n        <ContactsMessage>Your phonebook is empty. Add your first contact!</ContactsMessage>\n      ) : (\n        <Filter value={filter} handleFilterContacts={handleFilterContacts} />\n      )}\n      {isLoading && !error && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      <ContactsList\n        contacts={getFilterContacts()}\n        onDeleteContact={onDeleteContact}\n      />\n    </div>\n  );\n};\nexport default ContactsPage;"],"names":["WrapForm","styled","Title","StyledForm","StyledInput","StyledLabel","selectContacts","state","contactsStore","selectItems","createSelector","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","addNewContact","useSelector","className","css","onSubmit","e","preventDefault","nameInput","currentTarget","elements","name","numberInput","number","contactName","value","contactPhone","some","contact","Notify","reset","type","placeholder","pattern","title","required","id","ContactsList","dispatch","useDispatch","map","phone","onClick","contactId","deleteContact","Filter","handleFilterContacts","onChange","target","message","ContactsMessage","useEffect","fetchContacts","newContact","addContact","length","filteredValue","filterContacts","Loader","filterlowerCase","toLowerCase","includes","getFilterContacts","onDeleteContact"],"sourceRoot":""}